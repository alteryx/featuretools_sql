name: Install Test
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
jobs:
  install_ft_complete:
    name: ${{ matrix.os }} - ${{ matrix.python_version }} install featuretools_sql
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python_version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Set up python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          cache: 'pip' 
          cache-dependency-path: 'pyproject.toml'
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }} 
          key: ${{ matrix.os- }}-${{ matrix.python_version }}-install-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml') }}-v01
      - name: Build package
        run: |
          make package
      - name: Install from sdist (not using cache)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install "unpacked_sdist/[complete]"
      - name: Install from sdist (using cache)
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          python -m pip install "unpacked_sdist/[complete]" --no-deps
      - name: Test by importing packages
        run: |
          python -c "import featuretools"
          python -c "import featuretools_sql"
          python -c "from featuretools.sql import DBConnector"
      - name: Check package conflicts
        run: |
          python -m pip check
